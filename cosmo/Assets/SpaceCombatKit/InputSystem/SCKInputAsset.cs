//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/SpaceCombatKit/InputSystem/SCKInputAsset.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @SCKInputAsset : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @SCKInputAsset()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""SCKInputAsset"",
    ""maps"": [
        {
            ""name"": ""General Controls"",
            ""id"": ""bb585eb7-c211-4d88-bb77-1af054e5dd2c"",
            ""actions"": [
                {
                    ""name"": ""Pause Menu"",
                    ""type"": ""Button"",
                    ""id"": ""3535a8b6-de8c-44d4-9d91-80e657ddd5f8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use"",
                    ""type"": ""Button"",
                    ""id"": ""5d9bdc94-900f-47d1-a103-ae5fbb0b64ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ac5f2434-33c3-4c39-86be-068e8eb5bc3b"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Pause Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64afd738-3515-40a9-9dd0-85e3f9f0bf13"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""076ca490-b8d5-458f-84b5-321a493f1ef3"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8b9aece-f331-4dbb-aad3-a1aaf2af7d74"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Spacefighter Controls"",
            ""id"": ""b866b1b1-c526-4fb1-93b9-31c5e967cbb3"",
            ""actions"": [
                {
                    ""name"": ""Fire Primary"",
                    ""type"": ""Button"",
                    ""id"": ""8a86676d-0177-4958-ae8e-185cb603f789"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire Secondary"",
                    ""type"": ""Button"",
                    ""id"": ""55009ea4-aa07-4fb7-abd9-330b8b5846b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Strafe"",
                    ""type"": ""PassThrough"",
                    ""id"": ""0ef4eab4-0bae-4ae6-8e66-ee48b6e227a9"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Steer"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a448d663-d2b6-475c-9257-00e4f09c6d0b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Boost"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fb6cfd4b-aa71-41e8-9f64-73bee8451284"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throttle"",
                    ""type"": ""PassThrough"",
                    ""id"": ""102ea6dd-ced7-4981-a616-ac8a0a491ada"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse Position"",
                    ""type"": ""Value"",
                    ""id"": ""a6cbb798-8d59-402a-bbb1-33cf223931fa"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mouse Delta"",
                    ""type"": ""Value"",
                    ""id"": ""1d9592eb-a022-43c5-99e8-dd64de9b21d8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c175b5b6-20f0-48db-b2be-ef4f7e7aff00"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LaunchLand"",
                    ""type"": ""Button"",
                    ""id"": ""ee3371ef-adf0-4017-8c89-fea713956d85"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""44dd747b-b92d-4ada-84b0-0da4c947402f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Fire Primary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d2d9e55-633c-42fc-ab72-72d08d2f2275"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Fire Primary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Strafe Keyboard"",
                    ""id"": ""3cd3783b-77e8-409a-a5df-9a313af01a9f"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9bdf06ac-c995-4d52-b448-57fa63807e95"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3c2697b6-330d-4e07-9e09-1ccf78770075"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f6227cab-f786-4444-b28a-c73b4bd3a44d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2be10b03-a9a1-4bbe-8c8b-d6865e8d46e6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Strafe Gamepad"",
                    ""id"": ""ed37c26b-0768-4d09-83dd-e15fd6c89f8f"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ba5c31c2-47a7-46ac-990e-0c69e412bf20"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""bb862c78-f283-488b-b8a4-344b34270698"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""39961533-bebc-4feb-9309-a630261c6c26"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6476da01-8816-4212-8351-87509f8c5978"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ae2b85bf-b4fd-4b2c-be8e-fc5892f8cdf2"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Fire Secondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f6573996-5d0b-44b3-a94f-32c4f8448ba9"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Fire Secondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7623694-a993-439a-9105-9d183c49e253"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Boost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73803058-0f49-444a-85be-7000339d7e22"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Boost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""SteeringKeyboard"",
                    ""id"": ""ccc79a62-338a-4d2b-9189-6173fbedfa83"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Steer"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""37b7afe6-8269-4c0f-b80d-af86b5988f9d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9b61a777-e7da-465f-bfbb-832b1630d165"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8ef24cf5-80b8-4818-9abf-146d0f8a14a7"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0b8c2011-f5d5-4c2d-b0b7-2aa2ba4e5ab8"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""SteeringGamepad"",
                    ""id"": ""610b5172-3060-4488-81f8-eacf4c627cb8"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Steer"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""70ae602d-93ea-4110-ad8a-4d08a463cdb6"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c7a64384-0dbb-40f7-9522-133f66c324b9"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cebc5ff3-51e0-45eb-a1a4-3ac594beafaa"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f39e3a18-aa8b-4129-8cd1-2d7762f11d68"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""AccelerationKeyboard"",
                    ""id"": ""06670e1e-c493-4952-911d-33b7df766d26"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""09d9163e-f344-45ee-a1fb-0ac643d7f49c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""fe07f91f-90b0-4e58-afa0-b7a59fd8e4de"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""AccelerationGamepad"",
                    ""id"": ""d88b5425-45cd-4236-9345-a269c23706bc"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e094e836-efad-45a2-a0f1-607bd6355893"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b1a48bd9-404d-4f18-ae2d-e09ed2fdcb85"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9c0d3372-14fd-442b-b02d-3dc5bd28147e"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Mouse Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""RollKeyboard"",
                    ""id"": ""7bb050f5-239e-4d4d-89a8-ef31160df18e"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""683d9060-4aff-4929-8bf4-07aa73a7b453"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""368c2e86-11cd-4361-8ff2-feea3c74c898"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6da3b8be-1551-4e2b-9b87-234fdda42d06"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Mouse Delta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5314501b-506a-4fe7-ada6-44781d60e6e6"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""LaunchLand"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba3ffa17-6ef3-4226-9e43-9f8591567a71"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LaunchLand"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""GimballedVehicleControls"",
            ""id"": ""9fb44831-d177-4812-a025-59d06547abf5"",
            ""actions"": [
                {
                    ""name"": ""Free Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3f45e315-ee2c-49cb-9e8b-da8e4dbca240"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseDelta"",
                    ""type"": ""Value"",
                    ""id"": ""a9a468ad-052b-407a-b164-2f6966e97adc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard "",
                    ""id"": ""60b4b3d7-b944-4141-900f-cad34cfe31ed"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Free Look"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""dc06fd3f-9163-41be-9374-c12cad2a30ff"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Free Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a0d41e25-c747-4148-9b20-6ebb1ef04281"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Free Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7f13eafe-3d67-4047-9b62-9bc587418100"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Free Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b694b7d1-d56e-468f-8e8b-a1b7fe2ae220"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Free Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""98e6ea6c-71ec-4e45-8625-6a2fbd49dd02"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Free Look"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""40e836f6-9cb4-4a41-ba9a-ba8126ce25bb"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Free Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""268ecc1a-e55c-49d5-98ca-c181fb52aac0"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Free Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a8ccf187-5207-4b12-9daa-39a00e476eea"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Free Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ef8d6dbf-d8bc-4a53-a610-47ffcb768000"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Free Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6ba7275d-bd41-449b-92b3-9c681004b49d"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.05,y=0.05)"",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""MouseDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CapitalShipControls"",
            ""id"": ""c75b9a2f-fe83-4770-b121-e555dfbdea8f"",
            ""actions"": [
                {
                    ""name"": ""Fire Primary"",
                    ""type"": ""Button"",
                    ""id"": ""5d8d4f7d-55b0-4c01-b8c0-5582e05540bc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire Secondary"",
                    ""type"": ""Button"",
                    ""id"": ""653ddc8c-05b0-43bf-94d8-b11edc178da0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Strafe"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1c9d7ed8-fd38-4362-bedb-416f19148230"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Steer"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4235d8ad-236e-44b6-9524-1db100ae79a4"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Boost"",
                    ""type"": ""PassThrough"",
                    ""id"": ""230ec3d0-5967-4abf-a02a-652829badfa9"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throttle"",
                    ""type"": ""PassThrough"",
                    ""id"": ""35b52e6b-7d16-4f67-984f-f318ad0cf0bb"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse Position"",
                    ""type"": ""Value"",
                    ""id"": ""72d9ce44-a5c7-44f0-b5f5-6a3a0246ba02"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mouse Delta"",
                    ""type"": ""Value"",
                    ""id"": ""d02f1652-e087-4da7-8a7a-e50a8918033a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""243c52ac-bd82-4f66-b714-e176bdf41b2d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Fire Primary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30c456d5-850e-4d0d-8614-816132801a09"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Fire Primary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Strafe Keyboard"",
                    ""id"": ""069b71a9-d7d0-446c-91dd-de9b39318f34"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""19920bd5-f254-4df5-817c-4579f24e06f9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b87eab1c-403e-4415-8675-89f6382e0e58"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a3eb7d93-7924-49b2-abeb-1a42fe576a9d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3c84997a-2c8a-4157-b65f-b1d8ef2a2478"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Strafe Gamepad"",
                    ""id"": ""e5c8cc1e-826b-41a5-8c5f-506503edeeb5"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0cf1ca95-fd61-4645-8850-dcc938df20d9"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""53f784f4-f312-4312-bea7-7ee3fa1dab16"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e624372f-3473-4bac-aad7-696edb2f7da9"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""986abfb8-1e44-4852-b49c-5a696ab2dd96"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9f45236e-f948-47d9-a601-9515579a1264"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Fire Secondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e047048-8140-446d-8989-dee37fe53104"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Fire Secondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f8c57736-79ff-4f57-ad25-288c33827360"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Boost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf79e5c0-7387-4fd6-a453-b81b4228d273"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Boost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""SteeringKeyboard"",
                    ""id"": ""b90390a1-5f09-451f-a749-0bb754be0fb6"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Steer"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""25220cd0-d78a-4abb-ab80-123609164083"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""096e7795-67ed-44ff-9a8a-8179c0ff280a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7f79624a-2563-4316-871d-37752b3deb8a"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""446c75a7-2ccf-4d8b-b330-e47072f7b11e"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""SteeringGamepad"",
                    ""id"": ""33e119d6-40f5-4ca6-8279-52b454dcb202"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Steer"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""63448052-5c07-4bf4-b275-55ba559a2186"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""70571781-cacc-4744-a6b4-f42e7347a221"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""AccelerationKeyboard"",
                    ""id"": ""dfa86318-0bfa-464c-ac35-e9798a10255f"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e181d405-db7d-4436-a255-9eec33105fbc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""edcff2d1-31aa-4422-9f9d-430c9e4d4f02"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""AccelerationGamepad"",
                    ""id"": ""11264eef-b658-440f-b556-d6ce819272e2"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""01810289-5444-45e3-a661-d3892a82e640"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""6ed003a6-0acc-41f3-baee-8089fc7e605f"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""643cc75f-355c-4432-9152-1e73bcf7eb9b"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Mouse Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""474c6de4-d7aa-4043-9b5a-7484289e75ac"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Mouse Delta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Character Controls"",
            ""id"": ""8714ba03-29b7-45ea-b81a-932de7a08d36"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e8110fbe-b1ed-4ce7-b412-31596a9ab88e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a8128486-e598-4c29-8982-abd269130bb1"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""3faa8b7c-1da3-4282-aac8-e36ffd84d0f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""3cf9fef4-33ee-40b9-9639-32a12f4c5b17"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""065746bf-424c-41ae-b920-73f3fd5f97d7"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e0f52c02-553d-473e-9cfc-54d6e412a208"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""493df57a-8d82-4e2e-ba14-b8ea27ea243c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9446b1a5-6bbd-492b-bf66-dc3bc2fb645a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2d49f1b3-3590-4a38-be92-823b22d9911a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""10918aba-5dd0-4894-b176-d660260ce02c"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1b55ad7d-d2db-4c94-983e-9d04f38750d3"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1a39f7f8-79c3-4c0b-863c-8f25998a9a05"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f31a32dc-2b98-4933-b336-01d5d644ae9c"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""26961fb8-7cf7-431a-8e13-6cf83bb31a77"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""a4d6afa7-0375-4a6b-abbe-2473814c5f98"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7b4be207-da3d-4738-9f45-320968580017"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""acb75c04-44a8-4de2-a9b6-1b3a02af2825"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""130146de-5be1-47a4-aaab-59670dd5710a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f1884513-7437-469c-9cca-651cfeab8258"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""661c85ac-2185-47f3-b328-8390a2bf3a82"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7939c37d-dfae-4dea-811c-f06f90d9f19a"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2be515b0-8660-431f-bbba-d488409c9e08"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""bf33395e-9666-4952-9447-4d49615b52cc"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""75f5a578-a0c2-4496-8c85-58fb08809931"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e7ab670a-df0d-48e7-a0de-701c74a21722"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67183620-2ee3-4685-8b3d-a000e021148b"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9dd55ef6-a7c8-4d93-afd1-ce46f329130f"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard;Gamepad"",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1073ecc-c269-486e-8c22-34dcf2c3bfdd"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Camera Controls"",
            ""id"": ""98915a07-e8fd-4e5e-89b6-9aa67ab5488c"",
            ""actions"": [
                {
                    ""name"": ""Cycle Camera View Forward"",
                    ""type"": ""Button"",
                    ""id"": ""8f0c5f6c-a78b-405c-8bc1-fa2f367fd8b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cycle Camera View Back"",
                    ""type"": ""Button"",
                    ""id"": ""1aabd21f-08d7-4cd7-a045-5140535936e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Free Look Mode"",
                    ""type"": ""Button"",
                    ""id"": ""6ec85b49-2765-416a-bda5-81843398f0ca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b5eb7341-56ea-4133-93cc-b974d4b2f85f"",
                    ""path"": ""<Keyboard>/rightBracket"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Cycle Camera View Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c733b8a-e8ff-4fec-ba1f-ae6f0c8bb4bb"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Cycle Camera View Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c78b05e-6d1c-4901-800c-31ec2794c654"",
                    ""path"": ""<Keyboard>/leftBracket"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Cycle Camera View Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d01f22cb-0fe6-4577-8fac-c260b3145543"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Free Look Mode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Targeting"",
            ""id"": ""7ddec75a-5f03-481a-8770-9c616f49810d"",
            ""actions"": [
                {
                    ""name"": ""TargetNext"",
                    ""type"": ""Button"",
                    ""id"": ""f9880903-5205-4846-abe4-a136a6ae0de0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TargetPrevious"",
                    ""type"": ""Button"",
                    ""id"": ""37a3c2de-4051-4511-878d-2d37e633555b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TargetNearest"",
                    ""type"": ""Button"",
                    ""id"": ""684430e0-f190-4cb4-a76d-2e31fc978424"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TargetFront"",
                    ""type"": ""Button"",
                    ""id"": ""0b114351-80b2-45c9-86b1-9f8fa516e23b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3337a3d2-44e0-4a12-be15-43b8c591649c"",
                    ""path"": ""<Keyboard>/period"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""TargetNext"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b84ea82f-e6ea-400f-9f74-29ad7ddb6a17"",
                    ""path"": ""<Keyboard>/comma"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TargetPrevious"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c931802-3f47-47fb-a7e7-a5c4d00e631e"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TargetNearest"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b0abe5b-fb56-493b-9f1e-58442ae09d32"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TargetFront"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""MouseKeyboard"",
            ""bindingGroup"": ""MouseKeyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // General Controls
        m_GeneralControls = asset.FindActionMap("General Controls", throwIfNotFound: true);
        m_GeneralControls_PauseMenu = m_GeneralControls.FindAction("Pause Menu", throwIfNotFound: true);
        m_GeneralControls_Use = m_GeneralControls.FindAction("Use", throwIfNotFound: true);
        // Spacefighter Controls
        m_SpacefighterControls = asset.FindActionMap("Spacefighter Controls", throwIfNotFound: true);
        m_SpacefighterControls_FirePrimary = m_SpacefighterControls.FindAction("Fire Primary", throwIfNotFound: true);
        m_SpacefighterControls_FireSecondary = m_SpacefighterControls.FindAction("Fire Secondary", throwIfNotFound: true);
        m_SpacefighterControls_Strafe = m_SpacefighterControls.FindAction("Strafe", throwIfNotFound: true);
        m_SpacefighterControls_Steer = m_SpacefighterControls.FindAction("Steer", throwIfNotFound: true);
        m_SpacefighterControls_Boost = m_SpacefighterControls.FindAction("Boost", throwIfNotFound: true);
        m_SpacefighterControls_Throttle = m_SpacefighterControls.FindAction("Throttle", throwIfNotFound: true);
        m_SpacefighterControls_MousePosition = m_SpacefighterControls.FindAction("Mouse Position", throwIfNotFound: true);
        m_SpacefighterControls_MouseDelta = m_SpacefighterControls.FindAction("Mouse Delta", throwIfNotFound: true);
        m_SpacefighterControls_Roll = m_SpacefighterControls.FindAction("Roll", throwIfNotFound: true);
        m_SpacefighterControls_LaunchLand = m_SpacefighterControls.FindAction("LaunchLand", throwIfNotFound: true);
        // GimballedVehicleControls
        m_GimballedVehicleControls = asset.FindActionMap("GimballedVehicleControls", throwIfNotFound: true);
        m_GimballedVehicleControls_FreeLook = m_GimballedVehicleControls.FindAction("Free Look", throwIfNotFound: true);
        m_GimballedVehicleControls_MouseDelta = m_GimballedVehicleControls.FindAction("MouseDelta", throwIfNotFound: true);
        // CapitalShipControls
        m_CapitalShipControls = asset.FindActionMap("CapitalShipControls", throwIfNotFound: true);
        m_CapitalShipControls_FirePrimary = m_CapitalShipControls.FindAction("Fire Primary", throwIfNotFound: true);
        m_CapitalShipControls_FireSecondary = m_CapitalShipControls.FindAction("Fire Secondary", throwIfNotFound: true);
        m_CapitalShipControls_Strafe = m_CapitalShipControls.FindAction("Strafe", throwIfNotFound: true);
        m_CapitalShipControls_Steer = m_CapitalShipControls.FindAction("Steer", throwIfNotFound: true);
        m_CapitalShipControls_Boost = m_CapitalShipControls.FindAction("Boost", throwIfNotFound: true);
        m_CapitalShipControls_Throttle = m_CapitalShipControls.FindAction("Throttle", throwIfNotFound: true);
        m_CapitalShipControls_MousePosition = m_CapitalShipControls.FindAction("Mouse Position", throwIfNotFound: true);
        m_CapitalShipControls_MouseDelta = m_CapitalShipControls.FindAction("Mouse Delta", throwIfNotFound: true);
        // Character Controls
        m_CharacterControls = asset.FindActionMap("Character Controls", throwIfNotFound: true);
        m_CharacterControls_Look = m_CharacterControls.FindAction("Look", throwIfNotFound: true);
        m_CharacterControls_Move = m_CharacterControls.FindAction("Move", throwIfNotFound: true);
        m_CharacterControls_Jump = m_CharacterControls.FindAction("Jump", throwIfNotFound: true);
        m_CharacterControls_Run = m_CharacterControls.FindAction("Run", throwIfNotFound: true);
        // Camera Controls
        m_CameraControls = asset.FindActionMap("Camera Controls", throwIfNotFound: true);
        m_CameraControls_CycleCameraViewForward = m_CameraControls.FindAction("Cycle Camera View Forward", throwIfNotFound: true);
        m_CameraControls_CycleCameraViewBack = m_CameraControls.FindAction("Cycle Camera View Back", throwIfNotFound: true);
        m_CameraControls_FreeLookMode = m_CameraControls.FindAction("Free Look Mode", throwIfNotFound: true);
        // Targeting
        m_Targeting = asset.FindActionMap("Targeting", throwIfNotFound: true);
        m_Targeting_TargetNext = m_Targeting.FindAction("TargetNext", throwIfNotFound: true);
        m_Targeting_TargetPrevious = m_Targeting.FindAction("TargetPrevious", throwIfNotFound: true);
        m_Targeting_TargetNearest = m_Targeting.FindAction("TargetNearest", throwIfNotFound: true);
        m_Targeting_TargetFront = m_Targeting.FindAction("TargetFront", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // General Controls
    private readonly InputActionMap m_GeneralControls;
    private IGeneralControlsActions m_GeneralControlsActionsCallbackInterface;
    private readonly InputAction m_GeneralControls_PauseMenu;
    private readonly InputAction m_GeneralControls_Use;
    public struct GeneralControlsActions
    {
        private @SCKInputAsset m_Wrapper;
        public GeneralControlsActions(@SCKInputAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @PauseMenu => m_Wrapper.m_GeneralControls_PauseMenu;
        public InputAction @Use => m_Wrapper.m_GeneralControls_Use;
        public InputActionMap Get() { return m_Wrapper.m_GeneralControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GeneralControlsActions set) { return set.Get(); }
        public void SetCallbacks(IGeneralControlsActions instance)
        {
            if (m_Wrapper.m_GeneralControlsActionsCallbackInterface != null)
            {
                @PauseMenu.started -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnPauseMenu;
                @PauseMenu.performed -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnPauseMenu;
                @PauseMenu.canceled -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnPauseMenu;
                @Use.started -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnUse;
                @Use.performed -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnUse;
                @Use.canceled -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnUse;
            }
            m_Wrapper.m_GeneralControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PauseMenu.started += instance.OnPauseMenu;
                @PauseMenu.performed += instance.OnPauseMenu;
                @PauseMenu.canceled += instance.OnPauseMenu;
                @Use.started += instance.OnUse;
                @Use.performed += instance.OnUse;
                @Use.canceled += instance.OnUse;
            }
        }
    }
    public GeneralControlsActions @GeneralControls => new GeneralControlsActions(this);

    // Spacefighter Controls
    private readonly InputActionMap m_SpacefighterControls;
    private ISpacefighterControlsActions m_SpacefighterControlsActionsCallbackInterface;
    private readonly InputAction m_SpacefighterControls_FirePrimary;
    private readonly InputAction m_SpacefighterControls_FireSecondary;
    private readonly InputAction m_SpacefighterControls_Strafe;
    private readonly InputAction m_SpacefighterControls_Steer;
    private readonly InputAction m_SpacefighterControls_Boost;
    private readonly InputAction m_SpacefighterControls_Throttle;
    private readonly InputAction m_SpacefighterControls_MousePosition;
    private readonly InputAction m_SpacefighterControls_MouseDelta;
    private readonly InputAction m_SpacefighterControls_Roll;
    private readonly InputAction m_SpacefighterControls_LaunchLand;
    public struct SpacefighterControlsActions
    {
        private @SCKInputAsset m_Wrapper;
        public SpacefighterControlsActions(@SCKInputAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @FirePrimary => m_Wrapper.m_SpacefighterControls_FirePrimary;
        public InputAction @FireSecondary => m_Wrapper.m_SpacefighterControls_FireSecondary;
        public InputAction @Strafe => m_Wrapper.m_SpacefighterControls_Strafe;
        public InputAction @Steer => m_Wrapper.m_SpacefighterControls_Steer;
        public InputAction @Boost => m_Wrapper.m_SpacefighterControls_Boost;
        public InputAction @Throttle => m_Wrapper.m_SpacefighterControls_Throttle;
        public InputAction @MousePosition => m_Wrapper.m_SpacefighterControls_MousePosition;
        public InputAction @MouseDelta => m_Wrapper.m_SpacefighterControls_MouseDelta;
        public InputAction @Roll => m_Wrapper.m_SpacefighterControls_Roll;
        public InputAction @LaunchLand => m_Wrapper.m_SpacefighterControls_LaunchLand;
        public InputActionMap Get() { return m_Wrapper.m_SpacefighterControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SpacefighterControlsActions set) { return set.Get(); }
        public void SetCallbacks(ISpacefighterControlsActions instance)
        {
            if (m_Wrapper.m_SpacefighterControlsActionsCallbackInterface != null)
            {
                @FirePrimary.started -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnFirePrimary;
                @FirePrimary.performed -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnFirePrimary;
                @FirePrimary.canceled -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnFirePrimary;
                @FireSecondary.started -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnFireSecondary;
                @FireSecondary.performed -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnFireSecondary;
                @FireSecondary.canceled -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnFireSecondary;
                @Strafe.started -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnStrafe;
                @Strafe.performed -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnStrafe;
                @Strafe.canceled -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnStrafe;
                @Steer.started -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnSteer;
                @Steer.performed -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnSteer;
                @Steer.canceled -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnSteer;
                @Boost.started -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnBoost;
                @Boost.performed -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnBoost;
                @Boost.canceled -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnBoost;
                @Throttle.started -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnThrottle;
                @Throttle.performed -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnThrottle;
                @Throttle.canceled -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnThrottle;
                @MousePosition.started -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnMousePosition;
                @MousePosition.performed -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnMousePosition;
                @MousePosition.canceled -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnMousePosition;
                @MouseDelta.started -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnMouseDelta;
                @MouseDelta.performed -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnMouseDelta;
                @MouseDelta.canceled -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnMouseDelta;
                @Roll.started -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnRoll;
                @Roll.performed -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnRoll;
                @Roll.canceled -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnRoll;
                @LaunchLand.started -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnLaunchLand;
                @LaunchLand.performed -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnLaunchLand;
                @LaunchLand.canceled -= m_Wrapper.m_SpacefighterControlsActionsCallbackInterface.OnLaunchLand;
            }
            m_Wrapper.m_SpacefighterControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @FirePrimary.started += instance.OnFirePrimary;
                @FirePrimary.performed += instance.OnFirePrimary;
                @FirePrimary.canceled += instance.OnFirePrimary;
                @FireSecondary.started += instance.OnFireSecondary;
                @FireSecondary.performed += instance.OnFireSecondary;
                @FireSecondary.canceled += instance.OnFireSecondary;
                @Strafe.started += instance.OnStrafe;
                @Strafe.performed += instance.OnStrafe;
                @Strafe.canceled += instance.OnStrafe;
                @Steer.started += instance.OnSteer;
                @Steer.performed += instance.OnSteer;
                @Steer.canceled += instance.OnSteer;
                @Boost.started += instance.OnBoost;
                @Boost.performed += instance.OnBoost;
                @Boost.canceled += instance.OnBoost;
                @Throttle.started += instance.OnThrottle;
                @Throttle.performed += instance.OnThrottle;
                @Throttle.canceled += instance.OnThrottle;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
                @MouseDelta.started += instance.OnMouseDelta;
                @MouseDelta.performed += instance.OnMouseDelta;
                @MouseDelta.canceled += instance.OnMouseDelta;
                @Roll.started += instance.OnRoll;
                @Roll.performed += instance.OnRoll;
                @Roll.canceled += instance.OnRoll;
                @LaunchLand.started += instance.OnLaunchLand;
                @LaunchLand.performed += instance.OnLaunchLand;
                @LaunchLand.canceled += instance.OnLaunchLand;
            }
        }
    }
    public SpacefighterControlsActions @SpacefighterControls => new SpacefighterControlsActions(this);

    // GimballedVehicleControls
    private readonly InputActionMap m_GimballedVehicleControls;
    private IGimballedVehicleControlsActions m_GimballedVehicleControlsActionsCallbackInterface;
    private readonly InputAction m_GimballedVehicleControls_FreeLook;
    private readonly InputAction m_GimballedVehicleControls_MouseDelta;
    public struct GimballedVehicleControlsActions
    {
        private @SCKInputAsset m_Wrapper;
        public GimballedVehicleControlsActions(@SCKInputAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @FreeLook => m_Wrapper.m_GimballedVehicleControls_FreeLook;
        public InputAction @MouseDelta => m_Wrapper.m_GimballedVehicleControls_MouseDelta;
        public InputActionMap Get() { return m_Wrapper.m_GimballedVehicleControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GimballedVehicleControlsActions set) { return set.Get(); }
        public void SetCallbacks(IGimballedVehicleControlsActions instance)
        {
            if (m_Wrapper.m_GimballedVehicleControlsActionsCallbackInterface != null)
            {
                @FreeLook.started -= m_Wrapper.m_GimballedVehicleControlsActionsCallbackInterface.OnFreeLook;
                @FreeLook.performed -= m_Wrapper.m_GimballedVehicleControlsActionsCallbackInterface.OnFreeLook;
                @FreeLook.canceled -= m_Wrapper.m_GimballedVehicleControlsActionsCallbackInterface.OnFreeLook;
                @MouseDelta.started -= m_Wrapper.m_GimballedVehicleControlsActionsCallbackInterface.OnMouseDelta;
                @MouseDelta.performed -= m_Wrapper.m_GimballedVehicleControlsActionsCallbackInterface.OnMouseDelta;
                @MouseDelta.canceled -= m_Wrapper.m_GimballedVehicleControlsActionsCallbackInterface.OnMouseDelta;
            }
            m_Wrapper.m_GimballedVehicleControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @FreeLook.started += instance.OnFreeLook;
                @FreeLook.performed += instance.OnFreeLook;
                @FreeLook.canceled += instance.OnFreeLook;
                @MouseDelta.started += instance.OnMouseDelta;
                @MouseDelta.performed += instance.OnMouseDelta;
                @MouseDelta.canceled += instance.OnMouseDelta;
            }
        }
    }
    public GimballedVehicleControlsActions @GimballedVehicleControls => new GimballedVehicleControlsActions(this);

    // CapitalShipControls
    private readonly InputActionMap m_CapitalShipControls;
    private ICapitalShipControlsActions m_CapitalShipControlsActionsCallbackInterface;
    private readonly InputAction m_CapitalShipControls_FirePrimary;
    private readonly InputAction m_CapitalShipControls_FireSecondary;
    private readonly InputAction m_CapitalShipControls_Strafe;
    private readonly InputAction m_CapitalShipControls_Steer;
    private readonly InputAction m_CapitalShipControls_Boost;
    private readonly InputAction m_CapitalShipControls_Throttle;
    private readonly InputAction m_CapitalShipControls_MousePosition;
    private readonly InputAction m_CapitalShipControls_MouseDelta;
    public struct CapitalShipControlsActions
    {
        private @SCKInputAsset m_Wrapper;
        public CapitalShipControlsActions(@SCKInputAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @FirePrimary => m_Wrapper.m_CapitalShipControls_FirePrimary;
        public InputAction @FireSecondary => m_Wrapper.m_CapitalShipControls_FireSecondary;
        public InputAction @Strafe => m_Wrapper.m_CapitalShipControls_Strafe;
        public InputAction @Steer => m_Wrapper.m_CapitalShipControls_Steer;
        public InputAction @Boost => m_Wrapper.m_CapitalShipControls_Boost;
        public InputAction @Throttle => m_Wrapper.m_CapitalShipControls_Throttle;
        public InputAction @MousePosition => m_Wrapper.m_CapitalShipControls_MousePosition;
        public InputAction @MouseDelta => m_Wrapper.m_CapitalShipControls_MouseDelta;
        public InputActionMap Get() { return m_Wrapper.m_CapitalShipControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CapitalShipControlsActions set) { return set.Get(); }
        public void SetCallbacks(ICapitalShipControlsActions instance)
        {
            if (m_Wrapper.m_CapitalShipControlsActionsCallbackInterface != null)
            {
                @FirePrimary.started -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnFirePrimary;
                @FirePrimary.performed -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnFirePrimary;
                @FirePrimary.canceled -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnFirePrimary;
                @FireSecondary.started -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnFireSecondary;
                @FireSecondary.performed -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnFireSecondary;
                @FireSecondary.canceled -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnFireSecondary;
                @Strafe.started -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnStrafe;
                @Strafe.performed -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnStrafe;
                @Strafe.canceled -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnStrafe;
                @Steer.started -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnSteer;
                @Steer.performed -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnSteer;
                @Steer.canceled -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnSteer;
                @Boost.started -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnBoost;
                @Boost.performed -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnBoost;
                @Boost.canceled -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnBoost;
                @Throttle.started -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnThrottle;
                @Throttle.performed -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnThrottle;
                @Throttle.canceled -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnThrottle;
                @MousePosition.started -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnMousePosition;
                @MousePosition.performed -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnMousePosition;
                @MousePosition.canceled -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnMousePosition;
                @MouseDelta.started -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnMouseDelta;
                @MouseDelta.performed -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnMouseDelta;
                @MouseDelta.canceled -= m_Wrapper.m_CapitalShipControlsActionsCallbackInterface.OnMouseDelta;
            }
            m_Wrapper.m_CapitalShipControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @FirePrimary.started += instance.OnFirePrimary;
                @FirePrimary.performed += instance.OnFirePrimary;
                @FirePrimary.canceled += instance.OnFirePrimary;
                @FireSecondary.started += instance.OnFireSecondary;
                @FireSecondary.performed += instance.OnFireSecondary;
                @FireSecondary.canceled += instance.OnFireSecondary;
                @Strafe.started += instance.OnStrafe;
                @Strafe.performed += instance.OnStrafe;
                @Strafe.canceled += instance.OnStrafe;
                @Steer.started += instance.OnSteer;
                @Steer.performed += instance.OnSteer;
                @Steer.canceled += instance.OnSteer;
                @Boost.started += instance.OnBoost;
                @Boost.performed += instance.OnBoost;
                @Boost.canceled += instance.OnBoost;
                @Throttle.started += instance.OnThrottle;
                @Throttle.performed += instance.OnThrottle;
                @Throttle.canceled += instance.OnThrottle;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
                @MouseDelta.started += instance.OnMouseDelta;
                @MouseDelta.performed += instance.OnMouseDelta;
                @MouseDelta.canceled += instance.OnMouseDelta;
            }
        }
    }
    public CapitalShipControlsActions @CapitalShipControls => new CapitalShipControlsActions(this);

    // Character Controls
    private readonly InputActionMap m_CharacterControls;
    private ICharacterControlsActions m_CharacterControlsActionsCallbackInterface;
    private readonly InputAction m_CharacterControls_Look;
    private readonly InputAction m_CharacterControls_Move;
    private readonly InputAction m_CharacterControls_Jump;
    private readonly InputAction m_CharacterControls_Run;
    public struct CharacterControlsActions
    {
        private @SCKInputAsset m_Wrapper;
        public CharacterControlsActions(@SCKInputAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_CharacterControls_Look;
        public InputAction @Move => m_Wrapper.m_CharacterControls_Move;
        public InputAction @Jump => m_Wrapper.m_CharacterControls_Jump;
        public InputAction @Run => m_Wrapper.m_CharacterControls_Run;
        public InputActionMap Get() { return m_Wrapper.m_CharacterControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterControlsActions set) { return set.Get(); }
        public void SetCallbacks(ICharacterControlsActions instance)
        {
            if (m_Wrapper.m_CharacterControlsActionsCallbackInterface != null)
            {
                @Look.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnLook;
                @Move.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnMove;
                @Jump.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnJump;
                @Run.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnRun;
            }
            m_Wrapper.m_CharacterControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
            }
        }
    }
    public CharacterControlsActions @CharacterControls => new CharacterControlsActions(this);

    // Camera Controls
    private readonly InputActionMap m_CameraControls;
    private ICameraControlsActions m_CameraControlsActionsCallbackInterface;
    private readonly InputAction m_CameraControls_CycleCameraViewForward;
    private readonly InputAction m_CameraControls_CycleCameraViewBack;
    private readonly InputAction m_CameraControls_FreeLookMode;
    public struct CameraControlsActions
    {
        private @SCKInputAsset m_Wrapper;
        public CameraControlsActions(@SCKInputAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @CycleCameraViewForward => m_Wrapper.m_CameraControls_CycleCameraViewForward;
        public InputAction @CycleCameraViewBack => m_Wrapper.m_CameraControls_CycleCameraViewBack;
        public InputAction @FreeLookMode => m_Wrapper.m_CameraControls_FreeLookMode;
        public InputActionMap Get() { return m_Wrapper.m_CameraControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraControlsActions set) { return set.Get(); }
        public void SetCallbacks(ICameraControlsActions instance)
        {
            if (m_Wrapper.m_CameraControlsActionsCallbackInterface != null)
            {
                @CycleCameraViewForward.started -= m_Wrapper.m_CameraControlsActionsCallbackInterface.OnCycleCameraViewForward;
                @CycleCameraViewForward.performed -= m_Wrapper.m_CameraControlsActionsCallbackInterface.OnCycleCameraViewForward;
                @CycleCameraViewForward.canceled -= m_Wrapper.m_CameraControlsActionsCallbackInterface.OnCycleCameraViewForward;
                @CycleCameraViewBack.started -= m_Wrapper.m_CameraControlsActionsCallbackInterface.OnCycleCameraViewBack;
                @CycleCameraViewBack.performed -= m_Wrapper.m_CameraControlsActionsCallbackInterface.OnCycleCameraViewBack;
                @CycleCameraViewBack.canceled -= m_Wrapper.m_CameraControlsActionsCallbackInterface.OnCycleCameraViewBack;
                @FreeLookMode.started -= m_Wrapper.m_CameraControlsActionsCallbackInterface.OnFreeLookMode;
                @FreeLookMode.performed -= m_Wrapper.m_CameraControlsActionsCallbackInterface.OnFreeLookMode;
                @FreeLookMode.canceled -= m_Wrapper.m_CameraControlsActionsCallbackInterface.OnFreeLookMode;
            }
            m_Wrapper.m_CameraControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CycleCameraViewForward.started += instance.OnCycleCameraViewForward;
                @CycleCameraViewForward.performed += instance.OnCycleCameraViewForward;
                @CycleCameraViewForward.canceled += instance.OnCycleCameraViewForward;
                @CycleCameraViewBack.started += instance.OnCycleCameraViewBack;
                @CycleCameraViewBack.performed += instance.OnCycleCameraViewBack;
                @CycleCameraViewBack.canceled += instance.OnCycleCameraViewBack;
                @FreeLookMode.started += instance.OnFreeLookMode;
                @FreeLookMode.performed += instance.OnFreeLookMode;
                @FreeLookMode.canceled += instance.OnFreeLookMode;
            }
        }
    }
    public CameraControlsActions @CameraControls => new CameraControlsActions(this);

    // Targeting
    private readonly InputActionMap m_Targeting;
    private ITargetingActions m_TargetingActionsCallbackInterface;
    private readonly InputAction m_Targeting_TargetNext;
    private readonly InputAction m_Targeting_TargetPrevious;
    private readonly InputAction m_Targeting_TargetNearest;
    private readonly InputAction m_Targeting_TargetFront;
    public struct TargetingActions
    {
        private @SCKInputAsset m_Wrapper;
        public TargetingActions(@SCKInputAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @TargetNext => m_Wrapper.m_Targeting_TargetNext;
        public InputAction @TargetPrevious => m_Wrapper.m_Targeting_TargetPrevious;
        public InputAction @TargetNearest => m_Wrapper.m_Targeting_TargetNearest;
        public InputAction @TargetFront => m_Wrapper.m_Targeting_TargetFront;
        public InputActionMap Get() { return m_Wrapper.m_Targeting; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TargetingActions set) { return set.Get(); }
        public void SetCallbacks(ITargetingActions instance)
        {
            if (m_Wrapper.m_TargetingActionsCallbackInterface != null)
            {
                @TargetNext.started -= m_Wrapper.m_TargetingActionsCallbackInterface.OnTargetNext;
                @TargetNext.performed -= m_Wrapper.m_TargetingActionsCallbackInterface.OnTargetNext;
                @TargetNext.canceled -= m_Wrapper.m_TargetingActionsCallbackInterface.OnTargetNext;
                @TargetPrevious.started -= m_Wrapper.m_TargetingActionsCallbackInterface.OnTargetPrevious;
                @TargetPrevious.performed -= m_Wrapper.m_TargetingActionsCallbackInterface.OnTargetPrevious;
                @TargetPrevious.canceled -= m_Wrapper.m_TargetingActionsCallbackInterface.OnTargetPrevious;
                @TargetNearest.started -= m_Wrapper.m_TargetingActionsCallbackInterface.OnTargetNearest;
                @TargetNearest.performed -= m_Wrapper.m_TargetingActionsCallbackInterface.OnTargetNearest;
                @TargetNearest.canceled -= m_Wrapper.m_TargetingActionsCallbackInterface.OnTargetNearest;
                @TargetFront.started -= m_Wrapper.m_TargetingActionsCallbackInterface.OnTargetFront;
                @TargetFront.performed -= m_Wrapper.m_TargetingActionsCallbackInterface.OnTargetFront;
                @TargetFront.canceled -= m_Wrapper.m_TargetingActionsCallbackInterface.OnTargetFront;
            }
            m_Wrapper.m_TargetingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @TargetNext.started += instance.OnTargetNext;
                @TargetNext.performed += instance.OnTargetNext;
                @TargetNext.canceled += instance.OnTargetNext;
                @TargetPrevious.started += instance.OnTargetPrevious;
                @TargetPrevious.performed += instance.OnTargetPrevious;
                @TargetPrevious.canceled += instance.OnTargetPrevious;
                @TargetNearest.started += instance.OnTargetNearest;
                @TargetNearest.performed += instance.OnTargetNearest;
                @TargetNearest.canceled += instance.OnTargetNearest;
                @TargetFront.started += instance.OnTargetFront;
                @TargetFront.performed += instance.OnTargetFront;
                @TargetFront.canceled += instance.OnTargetFront;
            }
        }
    }
    public TargetingActions @Targeting => new TargetingActions(this);
    private int m_MouseKeyboardSchemeIndex = -1;
    public InputControlScheme MouseKeyboardScheme
    {
        get
        {
            if (m_MouseKeyboardSchemeIndex == -1) m_MouseKeyboardSchemeIndex = asset.FindControlSchemeIndex("MouseKeyboard");
            return asset.controlSchemes[m_MouseKeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IGeneralControlsActions
    {
        void OnPauseMenu(InputAction.CallbackContext context);
        void OnUse(InputAction.CallbackContext context);
    }
    public interface ISpacefighterControlsActions
    {
        void OnFirePrimary(InputAction.CallbackContext context);
        void OnFireSecondary(InputAction.CallbackContext context);
        void OnStrafe(InputAction.CallbackContext context);
        void OnSteer(InputAction.CallbackContext context);
        void OnBoost(InputAction.CallbackContext context);
        void OnThrottle(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnMouseDelta(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
        void OnLaunchLand(InputAction.CallbackContext context);
    }
    public interface IGimballedVehicleControlsActions
    {
        void OnFreeLook(InputAction.CallbackContext context);
        void OnMouseDelta(InputAction.CallbackContext context);
    }
    public interface ICapitalShipControlsActions
    {
        void OnFirePrimary(InputAction.CallbackContext context);
        void OnFireSecondary(InputAction.CallbackContext context);
        void OnStrafe(InputAction.CallbackContext context);
        void OnSteer(InputAction.CallbackContext context);
        void OnBoost(InputAction.CallbackContext context);
        void OnThrottle(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnMouseDelta(InputAction.CallbackContext context);
    }
    public interface ICharacterControlsActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
    }
    public interface ICameraControlsActions
    {
        void OnCycleCameraViewForward(InputAction.CallbackContext context);
        void OnCycleCameraViewBack(InputAction.CallbackContext context);
        void OnFreeLookMode(InputAction.CallbackContext context);
    }
    public interface ITargetingActions
    {
        void OnTargetNext(InputAction.CallbackContext context);
        void OnTargetPrevious(InputAction.CallbackContext context);
        void OnTargetNearest(InputAction.CallbackContext context);
        void OnTargetFront(InputAction.CallbackContext context);
    }
}
